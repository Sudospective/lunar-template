<ActorFrame
	Condition = "(function()
		_G.xero = {}
		function xero.loadfileM(path)
			-- load the song directory
			local songdir = GAMESTATE:GetCurrentSong():GetSongDir()
			-- attempt to load lua file
			local mylua, err = loadfile('.' .. songdir .. path)
			if err then
				-- try additional song folders
				local additionalsongfolders = PREFSMAN:GetPreference('AdditionalSongFolders')
				-- cut off 'Songs/' from the path
				local _,index = string.find(songdir,'Songs/')
				local songloc = string.sub(songdir,index)
				
				-- for every songfolder in the additionalsongfolders
				for songfolder in string.gfind(additionalsongfolders,'[^,]+') do
					local err
					
					-- attempt to load file
					mylua, err = loadfile(songfolder .. songloc .. path)
					if not err then break end
				end
			end
			-- report error if nothing was found
			if not mylua then
				SCREENMAN:SystemMessage(err)
				return
			else
				local success, result = pcall(mylua)
				if success then
					return result
				else
					SCREENMAN:SystemMessage(result)
					return
				end
			end
		end

		xero.loadfileM('notitg/std.lua')
		xero.loadfileM('notitg/actorgen.lua')
		
		return true

	end)()"
	InitCommand = "%function(self)
		xero.foreground = self
		
		xero.ActorList = Def.ActorFrame {
			xero.loadfileM('notitg/template.lua'),
			xero.loadfileM('notitg/ease.lua'),
			xero.loadfileM('notitg/plugins.lua'),
			xero.loadfileM('lua/mods.lua'),
		}

		self:sleep(9e9)
	end"
><children>
	<Layer 
		Name="Root"
		File="../notitg/actors.xml"
		Condition="actorgen.Template(xero.ActorList)"
		InitCommand="%actorgen.InitCmd"
	/>
</children></ActorFrame>
